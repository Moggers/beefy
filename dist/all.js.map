{"version":3,"sources":["Beefy.js","main.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["import \"babel-polyfill\";\r\nexport default class Beefy {\r\n    // The constructor shall initialize the board to 5x5, and set the onboard property to false\r\n    constructor() {\r\n        this.boardwidth = 5;\r\n        this.boardheight = 5;\r\n        this.onboard = 0;\r\n    }\r\n\r\n    // bearingToString retrieves the bearing as a cardinal direction.\r\n    // If the robot is not on the board yet it fails and returns -1\r\n    // Otherwise it returns a string containing one of north, south, east, or west\r\n    bearingToString() {\r\n        if( this.onboard == 0 ) {\r\n            return -1;\r\n        }\r\n        switch(this.bearing) {\r\n            case 0:\r\n                return \"north\";\r\n            case 1:\r\n                return \"east\";\r\n            case 2:\r\n                return \"south\";\r\n            case 3:\r\n                return \"west\";\r\n        }\r\n    }\r\n    // Bearing sets the bearing of the robot based on one of four strings\r\n    // If beefy is not on the board it fails and returns -1\r\n    // Otherwise it returns 0\r\n    setBearing(str) {\r\n        if( this.onboard == 0 ) {\r\n            return -1;\r\n        }\r\n        switch(str){\r\n        case \"north\":\r\n            this.bearing = 0;\r\n            return 0;\r\n        case \"east\":\r\n            this.bearing = 1;\r\n            return 0;\r\n        case \"south\":\r\n            this.bearing = 2;\r\n            return 0;\r\n        case \"west\":\r\n            this.bearing = 3;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    // Place shall set the onboard flag and mark his position\r\n    // If x or y are outside legal boundaries it shall fail and return 1\r\n    // Otherwise it returns 0\r\n    place( x,y,b ) {\r\n        if( 0 < x < this.boardwidth) {\r\n            if( 0 < y < this.boardheight) {\r\n                this.x = x;\r\n                this.y = y;\r\n                this.onboard = 1;\r\n                this.setBearing(b)\r\n                return 0;\r\n            }\r\n        }\r\n        return 1    ;\r\n    }\r\n\r\n    // Move tells beefy to move forward relative to its bearing\r\n    // If beefy is not on the board it fails and returns -1\r\n    // If the move were to push beefy off the board it fails and returns 1\r\n    // Otherwie, it returns 0\r\n    move(){\r\n        if( this.onboard == 0 ) {\r\n            return -1;\r\n        }\r\n        let nx = this.x;\r\n        let ny = this.y;\r\n        switch(this.bearing) {\r\n        case 0:\r\n            ny++;\r\n            break;\r\n        case 1:\r\n            nx++;\r\n            break;\r\n        case 2:\r\n            ny--;\r\n            break;\r\n        case 3:\r\n            nx--;\r\n            break;\r\n        }\r\n        if( 0 <= nx && nx < this.boardheight){\r\n            if( 0 <= ny && nx < this.boardheight ) {\r\n                this.x = nx;\r\n                this.y = ny;\r\n                return 0;\r\n            }\r\n        }\r\n        return 1;\r\n    }\r\n    \r\n    // Left turns beefy 90 degrees (one quartercircle) anti-clockwise.\r\n    // If beefy is not on the board it fails and returns -1\r\n    // Otherwise it returns 0\r\n    left() {\r\n        if( this.onboard == 1 ) {\r\n            this.bearing--;\r\n            return 0;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    // Right turns beefy 90 degrees (one quartercircle) clockwise\r\n    // If beefy is not on the board it fails and returns -1\r\n    // Otherwise it returns 0\r\n    right() {\r\n        if( this.onboard == 1 ) {\r\n            this.bearing++;\r\n            return 0;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n    \r\n    // Report retrieves a string containing beefy's current position and bearing\r\n    // If beefy is not on the board it returns -1\r\n    // Otherwise it returns a string containing beefy's status\r\n    get report() {\r\n        if(this.onboard == 1 ) {\r\n            return \"X: \" + this.x + \" Y: \" + this.y + \" Bearing: \" + this.bearingToString();\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    // handleCommand takes a string representing and returns a string as a response\r\n    handleCommand(str) {\r\n        if( typeof(str) == 'undefined') {\r\n            return \"Nonexistant command string\"\r\n        } if( str == \"\" ) {\r\n            return \"Empty command string\"\r\n        }\r\n        let strarr = str.split(\" \")\r\n        let rval = 0\r\n        switch(strarr[0]){\r\n        case \"PLACE\":\r\n            let re = new RegExp(\"PLACE [0-4] [0-4] (north|east|south|west)\")\r\n            let ret = str.search(re)\r\n            if( ret == -1) {\r\n                return \"PLACE syntax is '/^PLACE [0-4] [0-4] (north|west|south|east)$/\"\r\n            }\r\n            rval = this.place(strarr[1], strarr[2], strarr[3])\r\n            switch(rval) {\r\n                case 1:\r\n                    return \"Tried to place outside of boundaries\"\r\n                case 0:\r\n                    return \"Successfully placed beefy\"\r\n                default:\r\n                    return \"CRITFAIL: Unknown status code from this.place\"\r\n            } \r\n        case \"MOVE\":\r\n            rval = this.move()\r\n            switch(rval) {\r\n            case 1:\r\n                return \"Tried to drive beefy off the edge of the table\"\r\n            case -1:\r\n                return \"Beefy can't drive if he's not on the table yet\"\r\n            case 0:\r\n                return \"Beefy went for a drive\"\r\n            default:\r\n                return \"CRITFAIL: Unknown status code from this.move \" + rval\r\n            }\r\n        case \"LEFT\":\r\n            rval = this.left()\r\n            switch(rval) {\r\n            case -1:\r\n                return \"Beefy can't turn if he's not on the table yet\"\r\n            case 0:\r\n                return \"Turned beefy left\"\r\n            default:\r\n                return \"CRITFAIL: Unknown status code from this.left\"\r\n            }\r\n        case \"RIGHT\":\r\n            rval = this.right()\r\n            switch(rval) {\r\n            case -1:\r\n                return \"Beefy can't turn if he's not on the table yet\"\r\n            case 0:\r\n                return \"Turned beefy right\"\r\n            default:\r\n                return \"CRITFAIL: Unknown status code from this.right\"\r\n            }\r\n        case \"REPORT\":\r\n            rval = this.report\r\n            switch(rval) {\r\n            case -1:\r\n                return \"Beefy can't give a report if he's not on the table yet\"\r\n            default:\r\n                return rval;\r\n            }\r\n        default:\r\n            return \"Unrecognized opcode, your options are PLACE, MOVE, LEFT, RIGHT, and REPORT. Check the docs for their syntax\"\r\n        }\r\n\r\n    }\r\n}","import readline from \"readline\" \r\nvar beefy = new Beefy();\r\n\r\n\r\nconst rl = readline.createInterface({\r\n    input: process.stdin,\r\n    output: process.stdout\r\n});\r\nfunction pollinput() {\r\n    rl.question(\"Enter command: \", (answer) => {\r\n        console.log(beefy.handleCommand(answer))\r\n        pollinput();\r\n    });\r\n}\r\npollinput();"],"sourceRoot":"/source/"}